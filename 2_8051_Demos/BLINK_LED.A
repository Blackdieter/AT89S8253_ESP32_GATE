ORG 0000H         ; Start program from address 0000H

; Step 1: Initialize registers with numbers
MOV R0, #0xf9      ; Load 1 into R0
MOV R1, #0xf9       ; Load 2 into R1
MOV R2, #0xf9      ; Load 3 into R2
MOV R3, #0xf9      ; Load 4 into R3

; Step 2: Initialize UART for 9600 baud rate
MOV TMOD, #20H    ; Timer 1 in Mode 2 (8-bit auto-reload)
MOV TH1, #0FDH    ; Set baud rate to 9600 (assuming 11.0592 MHz clock)
MOV SCON, #50H    ; Set UART mode 1, 8-bit UART, REN enabled
SETB TR1          ; Start Timer 1

; Step 3: Transmit "1234" as a string over UART
MOV A, R0         ; Move content of R0 (1) to Accumulator
ADD A, #30H       ; Convert 1 to ASCII ('1')
MOV SBUF, A       ; Send '1' over UART
ACALL WAIT_UART   ; Wait until transmission is complete

MOV A, R1         ; Move content of R1 (2) to Accumulator
ADD A, #30H       ; Convert 2 to ASCII ('2')
MOV SBUF, A       ; Send '2' over UART
ACALL WAIT_UART   ; Wait until transmission is complete

MOV A, R2         ; Move content of R2 (3) to Accumulator
ADD A, #30H       ; Convert 3 to ASCII ('3')
MOV SBUF, A       ; Send '3' over UART
ACALL WAIT_UART   ; Wait until transmission is complete

MOV A, R3         ; Move content of R3 (4) to Accumulator
ADD A, #30H       ; Convert 4 to ASCII ('4')
MOV SBUF, A       ; Send '4' over UART
ACALL WAIT_UART   ; Wait until transmission is complete


WAIT_UART:
   JNB TI, WAIT_UART ; Wait for the TI (Transmit Interrupt) flag to set
   CLR TI            ; Clear TI flag for the next transmission
   RET               ; Return to the main program
END               ; End of program
